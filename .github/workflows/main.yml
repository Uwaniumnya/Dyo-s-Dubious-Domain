name: Build and Deploy CCCC Frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'package*.json'
      - '.eleventy.js'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Verify package.json
        run: |
          echo "Package.json contents:"
          cat package.json
          echo "Available scripts:"
          npm run
          
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci --prefer-offline --no-audit
          
      - name: Build site with Eleventy
        run: |
          echo "Building static site..."
          npm run build
          echo "Build completed!"
          
      - name: Build verification
        run: |
          echo "Checking build output:"
          ls -la public/
          echo "Built pages:"
          find public -name "*.html" | head -10
          echo "Search index:"
          ls -la public/search.json || echo "Search index not found"
          echo "Assets:"
          ls -la public/assets/ || echo "Assets folder not found"
          
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
        
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Deployment complete
        run: |
          echo "Deployment successful!"
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Backend URL: https://62.169.21.243"

  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    
    steps:
      - name: Check site availability
        run: |
          echo "Performing health check..."
          sleep 30
          
          SITE_URL="https://uwaniumnya.github.io/Dyo-s-Dubious-Domain"
          
          echo "Testing site accessibility..."
          if curl -f -s -o /dev/null "$SITE_URL"; then
            echo "Site is accessible at $SITE_URL"
          else
            echo "Site is not accessible"
            exit 1
          fi
          
          echo "Testing search.json..."
          if curl -f -s -o /dev/null "$SITE_URL/search.json"; then
            echo "Search index is accessible"
          else
            echo "Search index not found"
          fi
          
      - name: Deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend URL**: https://uwaniumnya.github.io/Dyo-s-Dubious-Domain" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend URL**: https://62.169.21.243" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Successfully deployed" >> $GITHUB_STEP_SUMMARY
