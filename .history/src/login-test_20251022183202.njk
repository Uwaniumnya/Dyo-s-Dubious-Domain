---
title: Login Test (No Auto-Auth)
layout: 'base.njk'
bodyClass: 'auth-page'
---

<div class="auth-container">
  <div class="auth-card">
    <div class="auth-header">
      <h1>Login Test Page</h1>
      <p>Manual testing without automatic authentication checks</p>
    </div>

    <form id="loginForm" class="auth-form">
      <div class="form-group">
        <label for="username">Username</label>
        <input type="text" id="username" name="username" required>
      </div>

      <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" name="password" required>
      </div>

      <button type="submit" class="btn-primary">Sign In</button>
      <button type="button" id="test-backend" class="btn-secondary">Test Backend</button>
    </form>

    <div id="error-message" class="error-message" style="display: none;"></div>
    <div id="success-message" class="success-message" style="display: none;"></div>
  </div>
</div>

<script>
console.log('üß™ Login test page loaded - NO automatic auth checks');
console.log('Current hostname:', window.location.hostname);
console.log('Current pathname:', window.location.pathname);

// Test backend connection manually
document.getElementById('test-backend').addEventListener('click', async () => {
  console.log('üîß Manual backend test started...');
  
  const errorDiv = document.getElementById('error-message');
  const successDiv = document.getElementById('success-message');
  
  // Clear previous messages
  errorDiv.style.display = 'none';
  successDiv.style.display = 'none';
  
  try {
    console.log('üì° Testing backend connection...');
    const response = await fetch('https://62.169.21.243/api/auth/check', {
      method: 'GET',
      credentials: 'include',
      mode: 'cors'
    });
    
    console.log('üì® Response status:', response.status);
    console.log('üì® Response headers:', [...response.headers.entries()]);
    
    successDiv.textContent = `Backend responded with status: ${response.status}`;
    successDiv.style.display = 'block';
    successDiv.style.backgroundColor = '#d4edda';
    successDiv.style.color = '#155724';
    successDiv.style.border = '1px solid #c3e6cb';
    successDiv.style.padding = '10px';
    successDiv.style.marginTop = '10px';
    successDiv.style.borderRadius = '4px';
    
  } catch (error) {
    console.log('üö® Backend test error:', error);
    errorDiv.textContent = `Backend test failed: ${error.message}`;
    errorDiv.style.display = 'block';
  }
});

// Handle form submission
document.getElementById('loginForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  console.log('üîê Manual login attempt...');
  
  const errorDiv = document.getElementById('error-message');
  const successDiv = document.getElementById('success-message');
  
  // Clear previous messages
  errorDiv.style.display = 'none';
  successDiv.style.display = 'none';
  
  const formData = new FormData(e.target);
  const data = {
    username: formData.get('username'),
    password: formData.get('password')
  };
  
  try {
    console.log('üì° Attempting login...');
    const response = await fetch('https://62.169.21.243/api/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      credentials: 'include',
      mode: 'cors',
      body: JSON.stringify(data)
    });
    
    console.log('üì® Login response status:', response.status);
    
    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ Login successful:', result);
      
      successDiv.textContent = 'Login successful! Check console for details.';
      successDiv.style.display = 'block';
      successDiv.style.backgroundColor = '#d4edda';
      successDiv.style.color = '#155724';
      successDiv.style.border = '1px solid #c3e6cb';
      successDiv.style.padding = '10px';
      successDiv.style.marginTop = '10px';
      successDiv.style.borderRadius = '4px';
      
    } else {
      const result = await response.json();
      console.log('‚ùå Login failed:', result);
      
      errorDiv.textContent = result.error || 'Login failed';
      errorDiv.style.display = 'block';
    }
  } catch (error) {
    console.log('üö® Login error:', error);
    errorDiv.textContent = `Login error: ${error.message}`;
    errorDiv.style.display = 'block';
  }
});

// NO AUTOMATIC AUTH CHECKS - This page is for manual testing only
console.log('‚úÖ No automatic authentication checks will run on this page');
</script>

<style>
.success-message {
  display: none;
  margin-top: 1rem;
  padding: 0.75rem 1rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
}

.btn-secondary {
  margin-top: 10px;
  background-color: #6c757d;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 4px;
  cursor: pointer;
}

.btn-secondary:hover {
  background-color: #545b62;
}
</style>