name: Build and Deploy CCCC Frontendname: 🚀 Build and Deploy CCCC Frontendname: Deploy 11ty to GitHub Pages



on:on:

  push:

    branches: [ main ]on:  push:

    paths:

      - 'src/**'  # Trigger on push to main branch    branches: [ "main" ]

      - 'package*.json'

      - '.eleventy.js'  push:  workflow_dispatch:

      - '.github/workflows/**'

  workflow_dispatch:    branches: [ main ]



permissions:    paths:permissions:

  contents: read

  pages: write      - 'src/**'  contents: read

  id-token: write

      - 'package*.json'  pages: write

concurrency:

  group: "pages"      - '.eleventy.js'  id-token: write

  cancel-in-progress: false

      - '.github/workflows/**'

jobs:

  build:  concurrency:

    name: Build Frontend

    runs-on: ubuntu-latest  # Allow manual triggering  group: "pages"

    

    steps:  workflow_dispatch:  cancel-in-progress: true

      - name: Checkout repository

        uses: actions/checkout@v4

        with:

          fetch-depth: 0# Set permissions for GitHub Pages deploymentjobs:

        

      - name: Setup Node.jspermissions:  build:

        uses: actions/setup-node@v4

        with:  contents: read    runs-on: ubuntu-latest

          node-version: '20'

          cache: 'npm'  pages: write    steps:

          

      - name: Verify package.json  id-token: write      - uses: actions/checkout@v4

        run: |

          echo "Package.json contents:"      - uses: actions/setup-node@v4

          cat package.json

          echo "Available scripts:"# Allow only one concurrent deployment        with: { node-version: 20 }

          npm run

          concurrency:      - run: npm ci

      - name: Install dependencies

        run: |  group: "pages"      - run: npm run build

          echo "Installing dependencies..."

          npm ci --prefer-offline --no-audit  cancel-in-progress: false      - uses: actions/upload-pages-artifact@v3

          

      - name: Build site with Eleventy        with: { path: _site }   # <- Eleventy’s output

        run: |

          echo "Building static site..."jobs:

          npm run build

          echo "Build completed!"  # Build job  deploy:

          

      - name: Build verification  build:    needs: build

        run: |

          echo "Checking build output:"    name: 🔨 Build Frontend    runs-on: ubuntu-latest

          ls -la public/

          echo "Built pages:"    runs-on: ubuntu-latest    environment:

          find public -name "*.html" | head -10

          echo "Search index:"          name: github-pages

          ls -la public/search.json || echo "Search index not found"

          echo "Assets:"    steps:      url: ${{ steps.deployment.outputs.page_url }}

          ls -la public/assets/ || echo "Assets folder not found"

                - name: 📥 Checkout repository    steps:

      - name: Setup GitHub Pages

        uses: actions/configure-pages@v4        uses: actions/checkout@v4      - id: deployment

        

      - name: Upload Pages artifact        with:        uses: actions/deploy-pages@v4

        uses: actions/upload-pages-artifact@v3

        with:          fetch-depth: 0

          path: ./public        

      - name: 📦 Setup Node.js

  deploy:        uses: actions/setup-node@v4

    name: Deploy to GitHub Pages        with:

    environment:          node-version: '20'

      name: github-pages          cache: 'npm'

      url: ${{ steps.deployment.outputs.page_url }}          

    runs-on: ubuntu-latest      - name: 🔍 Verify package.json

    needs: build        run: |

              echo "📋 Package.json contents:"

    steps:          cat package.json

      - name: Deploy to GitHub Pages          echo "🔧 Available scripts:"

        id: deployment          npm run

        uses: actions/deploy-pages@v4          

              - name: 📚 Install dependencies

      - name: Deployment complete        run: |

        run: |          echo "🚀 Installing dependencies..."

          echo "Deployment successful!"          npm ci --prefer-offline --no-audit

          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"          

          echo "Backend URL: https://62.169.21.243"      - name: 🏗️ Build site with Eleventy

        run: |

  health-check:          echo "🔨 Building static site..."

    name: Health Check          npm run build

    runs-on: ubuntu-latest          echo "✅ Build completed!"

    needs: deploy          

    if: success()      - name: 📊 Build verification

            run: |

    steps:          echo "📁 Checking build output:"

      - name: Check site availability          ls -la public/

        run: |          echo "📄 Built pages:"

          echo "Performing health check..."          find public -name "*.html" | head -10

          sleep 30          echo "🔗 Search index:"

                    ls -la public/search.json || echo "⚠️ Search index not found"

          SITE_URL="https://uwaniumnya.github.io/Dyo-s-Dubious-Domain"          echo "📦 Assets:"

                    ls -la public/assets/ || echo "⚠️ Assets folder not found"

          echo "Testing site accessibility..."          

          if curl -f -s -o /dev/null "$SITE_URL"; then      - name: 🔧 Setup GitHub Pages

            echo "Site is accessible at $SITE_URL"        uses: actions/configure-pages@v4

          else        

            echo "Site is not accessible"      - name: 📤 Upload Pages artifact

            exit 1        uses: actions/upload-pages-artifact@v3

          fi        with:

                    path: ./public

          echo "Testing search.json..."          name: github-pages

          if curl -f -s -o /dev/null "$SITE_URL/search.json"; then

            echo "Search index is accessible"  # Deploy job

          else  deploy:

            echo "Search index not found"    name: 🚀 Deploy to GitHub Pages

          fi    environment:

                name: github-pages

      - name: Deployment summary      url: ${{ steps.deployment.outputs.page_url }}

        run: |    runs-on: ubuntu-latest

          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY    needs: build

          echo "- **Frontend URL**: https://uwaniumnya.github.io/Dyo-s-Dubious-Domain" >> $GITHUB_STEP_SUMMARY    

          echo "- **Backend URL**: https://62.169.21.243" >> $GITHUB_STEP_SUMMARY    steps:

          echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY      - name: 🌐 Deploy to GitHub Pages

          echo "- **Status**: Successfully deployed" >> $GITHUB_STEP_SUMMARY        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: ✅ Deployment complete
        run: |
          echo "🎉 Deployment successful!"
          echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "🔗 Backend URL: https://62.169.21.243"
          
  # Optional: Health check job
  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    
    steps:
      - name: 🔍 Check site availability
        run: |
          echo "🏥 Performing health check..."
          sleep 30  # Wait for deployment to propagate
          
          SITE_URL="https://uwaniumnya.github.io/Dyo-s-Dubious-Domain"
          
          echo "📡 Testing site accessibility..."
          if curl -f -s -o /dev/null "$SITE_URL"; then
            echo "✅ Site is accessible at $SITE_URL"
          else
            echo "❌ Site is not accessible"
            exit 1
          fi
          
          echo "🔍 Testing search.json..."
          if curl -f -s -o /dev/null "$SITE_URL/search.json"; then
            echo "✅ Search index is accessible"
          else
            echo "⚠️ Search index not found"
          fi
          
      - name: 📊 Deployment summary
        run: |
          echo "## 🎉 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend URL**: https://uwaniumnya.github.io/Dyo-s-Dubious-Domain" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend URL**: https://62.169.21.243" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Successfully deployed" >> $GITHUB_STEP_SUMMARY